<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.google.appengine.tools</groupId>
    <artifactId>appengine-pipeline-parent</artifactId>
    <name>App Engine Pipeline - Parent POM</name>
    <description>Google App Engine API for connecting together complex workflows</description>
    <url>https://github.com/GoogleCloudPlatform/appengine-pipelines/</url>
    <organization>
        <name>Google</name>
    </organization>
    <version>4.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>
    <properties>
        <appengine.target.version>1.9.71</appengine.target.version>
        <version.guice>7.0.0</version.guice>
        <version.guava>32.1.2-jre</version.guava>
        <version.google-spanner>6.51.0</version.google-spanner>
        <version.google-api-client>1.25.0</version.google-api-client>
        <version.google-oauth-client>1.25.0</version.google-oauth-client>
        <version.google-api-services-storage>v1-rev139-${version.google-api-client}</version.google-api-services-storage>
        <version.google-api-services-cloudtasks>v2-rev7-${version.google-api-client}</version.google-api-services-cloudtasks>
        <version.joda-time>2.9.9</version.joda-time>
    </properties>
    <modules>
        <module>pipeline</module>
        <module>pipeline-taskqueue</module>
        <module>pipeline-cloudtasks</module>
        <module>pipeline-tests</module>
    </modules>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <rules>
                        <!--
                           Requires that dependency version numbers converge.
                           If a project has two dependencies, A and B, both depending on the same artifact, C,
                           this rule will fail the build if A depends on a different version of C then the
                           version of C depended on by B.
                        -->
                        <dependencyConvergence>
                            <uniqueVersions>false</uniqueVersions>
                        </dependencyConvergence>
                        <requireUpperBoundDeps>
                            <!-- 'uniqueVersions' (default:false) can be set to true if you want to compare the timestamped SNAPSHOTs  -->
                            <!-- <uniqueVersions>true</uniqueVersions> -->
                            <excludes>
                                <!-- excluded because enforcer thinks that 1.0.0-pre3 > 1.0.0 :( -->
                                <exclude>com.google.cloud.bigtable:bigtable-protos</exclude>
                            </excludes>
                        </requireUpperBoundDeps>
                        <bannedDependencies>
                            <excludes>
                                <exclude>com.google.guava:guava-jdk5</exclude>
                            </excludes>
                        </bannedDependencies>
                    </rules>
                </configuration>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                    <!--
                      Checks the dependencies and fails if the groupId:artifactId combination exists in the
                      list of direct or transitive dependencies.
                    -->
                    <execution>
                        <id>enforce-ban-circular-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <banCircularDependencies/>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                    <!--
                      Checks the dependencies and fails if any class is present in more than one
                      dependency.
                    -->
                    <execution>
                        <id>enforce-ban-duplicate-classes</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>com.google.protobuf:protobuf-lite</exclude>
                                    </excludes>
                                </bannedDependencies>
                                <banDuplicateClasses>
                                    <ignoreClasses>
                                        <!--
                                               Don't just add classes here! add them as a last resort.
                                               Before doing so try to:
                                                   * exclude classes by excluding dependencies
                                                   * update a library (if possible)
                                                   * look for alternative splitted dependencies
                                               If you add something make sure the ignored classes are binary
                                               identical!
                                        -->
<!--                                        <ignoreClass>com.google.protobuf.*</ignoreClass>-->
<!--                                        <ignoreClass>org.apache.beam.sdk.util.*</ignoreClass>-->
<!--                                        <ignoreClass>org.apache.beam.vendor.*</ignoreClass>-->
<!--                                        <ignoreClass>org.apache.beam.model.*</ignoreClass>-->
<!--                                        <ignoreClass>-->
<!--                                            org.apache.beam.repackaged.beam_runners_core_construction_java.com.google.common.*-->
<!--                                        </ignoreClass>-->
<!--                                        <ignoreClass>com.google.thirdparty.publicsuffix.*</ignoreClass>-->
<!--                                        <ignoreClass>com.google.appengine.repackaged.*</ignoreClass>-->
<!--                                        <ignoreClass>org.w3c.dom.events.*</ignoreClass>-->
                                        <!--                                        <ignoreClass>org.codehaus.classworlds.*</ignoreClass>-->
                                    </ignoreClasses>
                                    <scopes>
                                        <scope>compile</scope>
                                        <scope>provided</scope>
                                        <scope>runtime</scope>
                                        <scope>system</scope>
                                        <scope>import</scope>
                                        <!-- Ignore test scope -->
                                        <!--<scope>test</scope>-->
                                    </scopes>
                                    <findAllDuplicates>true</findAllDuplicates>
                                    <ignoreWhenIdentical>true</ignoreWhenIdentical>
                                </banDuplicateClasses>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                    <!--
                      checks the dependencies transitively and fails if any class of any dependency is having
                      its bytecode version higher than the one specified.
                    -->
                    <execution>
                        <id>enforce-bytecode-version</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <enforceBytecodeVersion>
                                    <ignoredScopes>
                                        <scope>test</scope>
                                    </ignoredScopes>
                                    <maxJdkVersion>17</maxJdkVersion>
                                </enforceBytecodeVersion>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>extra-enforcer-rules</artifactId>
                        <version>1.5.1</version>
                    </dependency>
                </dependencies>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-checkstyle-plugin</artifactId>-->
<!--                <version>2.17</version>-->
<!--                <inherited>true</inherited>-->
<!--                <configuration>-->
<!--                    <configLocation>https://raw.githubusercontent.com/cloudaware/checkstyle-config/master/checkstyle.xml</configLocation>-->
<!--                    <suppressionsLocation>${session.executionRootDirectory}/suppressions.xml</suppressionsLocation>-->
<!--                    <consoleOutput>true</consoleOutput>-->
<!--                    <failsOnError>true</failsOnError>-->
<!--                </configuration>-->
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>com.puppycrawl.tools</groupId>-->
<!--                        <artifactId>checkstyle-backport-jre6</artifactId>-->
<!--                        <version>7.2</version>-->
<!--                    </dependency>-->
<!--                </dependencies>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>validate</id>-->
<!--                        <phase>validate</phase>-->
<!--                        <goals>-->
<!--                            <goal>check</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <!-- version number of release candidates come before the ##.0 in maven,
                     use .99 to get latest release within the specified major version -->
                <version>${version.guava}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${version.guice}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject.extensions</groupId>
                <artifactId>guice-servlet</artifactId>
                <version>${version.guice}</version>
            </dependency>
            <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>google-cloud-spanner</artifactId>
                <version>${version.google-spanner}</version>
            </dependency>
            <dependency>
                <groupId>com.google.apis</groupId>
                <artifactId>google-api-services-storage</artifactId>
                <version>${version.google-api-services-storage}</version>
            </dependency>
            <dependency>
                <groupId>com.google.apis</groupId>
                <artifactId>google-api-services-cloudtasks</artifactId>
                <version>${version.google-api-services-cloudtasks}</version>
            </dependency>
            <dependency>
                <groupId>com.cloudaware</groupId>
                <artifactId>deferred</artifactId>
                <version>1.0.10</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${version.joda-time}</version>
            </dependency>
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>1</version>
            </dependency>
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>5.0.0</version>
            </dependency>
            <dependency>
                <groupId>jakarta.inject</groupId>
                <artifactId>jakarta.inject-api</artifactId>
                <version>2.0.1</version>
            </dependency>
            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>2.20.0</version>
            </dependency>
            <dependency>
                <groupId>com.google.http-client</groupId>
                <artifactId>google-http-client-jackson2</artifactId>
                <version>1.36.0</version>
            </dependency>
            <dependency>
                <groupId>com.google.http-client</groupId>
                <artifactId>google-http-client</artifactId>
                <version>1.43.3</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.12.0</version>
            </dependency>
            <!-- test dependencies -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.10</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>1.8.4</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <pluginRepositories>
        <pluginRepository>
            <id>checkstyle-backport-jre6-maven</id>
            <name>checkstyle-backport-jre6-maven</name>
            <url>http://rnveach.github.io/checkstyle-backport-jre6/maven2</url>
        </pluginRepository>
    </pluginRepositories>
</project>
